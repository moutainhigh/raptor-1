server.port=80
server.servlet.context-path=/raptorApi

#环境变量 local/clone/test/online
libra.environment=local

######################## datasource ################################
spring.datasource.url=jdbc:mysql://localhost:3306/raptor?autoReconnect=true&useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull
spring.datasource.username=root
spring.datasource.password=123456
#spring.datasource.url=jdbc:mysql://192.168.3.227:3306/glutton_v2?autoReconnect=true&useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull
#spring.datasource.username=dev
#spring.datasource.password=egzRaJIGLkELge2n
spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.max-active=20
spring.datasource.max-idle=8
spring.datasource.min-idle=8
spring.datasource.initial-size=10

################################### 连接池设置 ##################################
# 初始化连接池大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM t_libra_account
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false

######################### JPA ###############################
# Specify the DBMS
spring.jpa.database=MYSQL
# Show or not log for each sql query
spring.jpa.show-sql=true

spring.thymeleaf.enabled = true
spring.thymeleaf.cache = false


#redis配置
# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
spring.redis.host=localhost
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=1000
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=50
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=20000

# 消费者ID
aliyun.mq.consumer.id=

# 阿里云身份验证accessKey，在阿里云服务器管理控制台创建
aliyun.mq.access.key=

# 阿里云身份验证secretKey，在阿里云服务器管理控制台创建
aliyun.mq.secret.key=

# 阿里云服务地址
aliyun.mq.ons.addr=

# 监听的topic - 先玩后付
aliyun.mq.gateway.topic=
